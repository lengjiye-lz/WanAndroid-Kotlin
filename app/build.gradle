apply plugin: 'com.android.application'
apply from: '../config.gradle'
// 自定义插件 生成mvvm文件
apply plugin: 'com.lengjiye.mvvm'

def mvvmGeneratorProperties = new Properties()
mvvmGeneratorProperties.load(new FileInputStream(file("mvvmGenerator.properties")))

mvvm {
    applicationId mvvmGeneratorProperties.applicationId
    functionName mvvmGeneratorProperties.functionName
    author mvvmGeneratorProperties.author
    addViewType Integer.parseInt(mvvmGeneratorProperties.addViewType)
}

//#定义混淆代码的路径
def proguardPath = "../proguard/code/proguard-rules.pro"

// 服务器地址
def base_url_release = "\"https://www.wanandroid.com\""

android {
    defaultConfig {
        applicationId "com.lengjiye.code"
    }

    signingConfigs {
        wanAndroid {
            //绝对路径和相对路径都可以
            storeFile file("../keystores/lengjiye.keystore")  //签名文件
            storePassword "ljy019916"                       //密码
            keyAlias "lengjiye"
            keyPassword "ljy019916"
        }

    }

    buildTypes {

        debug {
            debuggable true
            // 是否开启混淆
            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.wanAndroid
            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguardPath
            buildConfigField("String", "BASE_URL", base_url_release)
        }

        qa {
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // proguard-android.txt是android官方默认配置的一些不能混淆的类
            //路径 /Android/sdk/tools/proguard/proguard-android.txt
            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguardPath
            signingConfig signingConfigs.wanAndroid
            buildConfigField("String", "BASE_URL", base_url_release)
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguardPath
            signingConfig signingConfigs.wanAndroid
            buildConfigField("String", "BASE_URL", base_url_release)
        }
    }

    androidExtensions {
        experimental = true
    }
}

project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = [
                "-Xjsr305=strict",
                "-progressive"
        ]
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(':room')
    implementation project(':common')

}
